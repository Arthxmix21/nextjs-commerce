name: export-core-secrets-dotenv

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  export:
    runs-on: ubuntu-latest
    env:
      # From your repo screenshot
      DATABASE_URL:        ${{ secrets.DATABASE_URL }}
      DEEPSEEK_API_KEY:    ${{ secrets.DEEPSEEK_API_KEY }}
      GOOGLE_API_KEY:      ${{ secrets.GOOGLE_API_KEY }}
      GOOGLE_CSE_ID:       ${{ secrets.GOOGLE_CSE_ID }}
      MISTRAL_API_KEY:     ${{ secrets.MISTRAL_API_KEY }}
      OPENROUTER_API_KEY:  ${{ secrets.OPENROUTER_API_KEY }}
      SERPAPI_KEY:         ${{ secrets.SERPAPI_KEY }}
      SERPER_API_KEY:      ${{ secrets.SERPER_API_KEY }}
      SUPABASE_URL:        ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY:        ${{ secrets.SUPABASE_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Generate export/core-secrets.env
        run: |
          python - <<'PY'
          import os, pathlib
          names = [
            "DATABASE_URL","DEEPSEEK_API_KEY","GOOGLE_API_KEY","GOOGLE_CSE_ID",
            "MISTRAL_API_KEY","OPENROUTER_API_KEY","SERPAPI_KEY","SERPER_API_KEY",
            "SUPABASE_URL","SUPABASE_KEY",
          ]
          def escape(v: str) -> str:
            return v.replace("\\", "\\\\").replace("\n", "\\n").replace('"', '\\"')
          lines = []
          for k in names:
            v = os.environ.get(k)
            if v:
              lines.append(f'{k}="{escape(v)}"')
          p = pathlib.Path("export") / "core-secrets.env"
          p.parent.mkdir(parents=True, exist_ok=True)
          p.write_text("\n".join(lines) + "\n", encoding="utf-8")
          print(f"âœ… Wrote {p} with {len(lines)} vars")
          PY

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: core-secrets-env
          path: export/core-secrets.env





















<<<<<<< Updated upstream
=======
          git commit -m "refresh(test): competitions.json [skip ci]"
          git push origin "$TARGET_BRANCH"
name: Final Secrets Verification
on:
  workflow_dispatch:
jobs:
  verify-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check secrets
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}"
          echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}"
          echo "SERPAPI_KEY=${{ secrets.SERPAPI_KEY }}"
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}"
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}"

>>>>>>> Stashed changes

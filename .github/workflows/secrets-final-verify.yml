name: Export competitions (manual to test branch)

on:
  workflow_dispatch: {}

permissions:
  contents: write

env:
  TARGET_BRANCH: data-update-test  # change to 'main' after you verify

jobs:
  export:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout selected ref
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show tree to confirm paths
        run: |
          echo "== repo root =="
          pwd
          echo "== top-level files =="
          ls -la
          echo "== search for export_json.py =="
          find . -maxdepth 3 -iname "export_json.py" -print || true

      - name: Switch to TARGET_BRANCH (create if needed)
        run: |
          set -e
          if git ls-remote --exit-code --heads origin "$TARGET_BRANCH" >/dev/null 2>&1; then
            echo "Branch '$TARGET_BRANCH' exists on origin; checking it out"
            git fetch origin "$TARGET_BRANCH":"$TARGET_BRANCH"
            git checkout "$TARGET_BRANCH"
            # Merge the triggering commit so we test from latest code
            git merge --no-edit "$GITHUB_SHA" || true
          else
            echo "Creating branch '$TARGET_BRANCH' from current HEAD"
            git checkout -b "$TARGET_BRANCH"
          fi
          git status

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Create .env for exporter
        run: |
          cat > .env << 'EOF'
          SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          # Add others here only if your exporter reads them from .env
          # SERPER_API_KEY=${{ secrets.SERPER_API_KEY }}
          # GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
          # GOOGLE_CSE_ID=${{ secrets.GOOGLE_CSE_ID }}
          EOF
          echo "Wrote .env (values redacted)"

      - name: Run exporter (tries common locations)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: |
          set -e
          mkdir -p public
          if [ -f export_json.py ]; then
            python export_json.py --out public/competitions.json
          elif [ -f scripts/export_json.py ]; then
            python scripts/export_json.py --out public/competitions.json
          else
            echo "export_json.py not found in repo root or scripts/"
            echo "If it lives in another repo or path, adjust the step above."
            exit 1
          fi
          ls -la public || true

      - name: Upload result artifact (for debugging)
        uses: actions/upload-artifact@v4
        with:
          name: competitions-json
          path: public/competitions.json
          if-no-files-found: warn

      - name: Commit to TARGET_BRANCH
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add public/competitions.json
          if git diff --staged --quiet; then
            echo "No changes to competitions.json"
            exit 0
          fi
          git commit -m "refresh(test): competitions.json [skip ci]"
          git push -u origin "$TARGET_BRANCH"

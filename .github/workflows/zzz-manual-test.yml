name: secrets-final-verifyz
on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  verify:
    runs-on: ubuntu-latest
    env:
      # Secrets (primary)
      S_FB_API_A:                  ${{ secrets.FIREBASE_API_KEY }}
      S_FB_API_B:                  ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      S_FB_DOMAIN_A:               ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      S_FB_DOMAIN_B:               ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      S_SUPA_URL_A:                ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      S_SUPA_URL_B:                ${{ secrets.SUPABASE_URL }}
      S_SUPA_ANON_A:               ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      S_SUPA_ANON_B:               ${{ secrets.SUPABASE_ANON_KEY }}

      # Variables (fallback)
      V_FB_API_A:                  ${{ vars.FIREBASE_API_KEY }}
      V_FB_API_B:                  ${{ vars.NEXT_PUBLIC_FIREBASE_API_KEY }}
      V_FB_DOMAIN_A:               ${{ vars.FIREBASE_AUTH_DOMAIN }}
      V_FB_DOMAIN_B:               ${{ vars.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      V_SUPA_URL_A:                ${{ vars.NEXT_PUBLIC_SUPABASE_URL }}
      V_SUPA_URL_B:                ${{ vars.SUPABASE_URL }}
      V_SUPA_ANON_A:               ${{ vars.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      V_SUPA_ANON_B:               ${{ vars.SUPABASE_ANON_KEY }}

    steps:
      - name: Check required secrets/vars exist (values never printed)
        run: |
          python - <<'PY'
          import os, sys, hashlib, json

          def first_nonempty(keys):
            for k in keys:
              v = os.getenv(k)
              if v:
